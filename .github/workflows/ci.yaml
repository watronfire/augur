name: CI
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  test:
    name: test (python=${{ matrix.python-version }} biopython=${{ matrix.biopython-version || 'latest' }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        biopython-version:
          # list of Biopython versions with support for a new Python version
          # from https://github.com/biopython/biopython/blob/master/NEWS.rst
          - '1.73' # first to support Python 3.7
          - '1.76' # first to support Python 3.8
          - '1.79' # first to support Python 3.9
          - ''     # latest
        exclude:
          # some older Biopython versions are incompatible with later Python versions
          - { biopython-version: '1.73', python-version: '3.8' }
          - { biopython-version: '1.73', python-version: '3.9' }
          - { biopython-version: '1.73', python-version: '3.10' }
          - { biopython-version: '1.76', python-version: '3.9' }
          - { biopython-version: '1.76', python-version: '3.10' }
    defaults:
      run:
        shell: bash -l {0}
    env:
      COVERAGE_FILE: ${{ github.workspace }}/.coverage@python=${{ matrix.python-version }},biopython=${{ matrix.biopython-version || 'latest' }}
      COVERAGE_RCFILE: ${{ github.workspace }}/.coveragerc
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
    - run: |
        conda install -n base conda-libmamba-solver
        conda config --set solver libmamba
    - run: |
        conda install -c bioconda -c conda-forge \
          mafft \
          raxml \
          fasttree \
          iqtree \
          vcftools \
          biopython=${{ matrix.biopython-version }}
    - run: pip install .[dev]
    - run: conda info
    - run: conda list
    - run: pytest -c pytest.python3.ini --cov=augur
    - run: cram --shell=/bin/bash tests/
      env:
        AUGUR: coverage run -a ${{ github.workspace }}/bin/augur
    - run: bash tests/builds/runner.sh
    - uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: "${{ env.COVERAGE_FILE }}"

  codecov:
    if: github.repository == 'nextstrain/augur'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - run: pip install coverage

      - uses: actions/download-artifact@v3
        with:
          name: coverage

      - run: coverage combine .coverage@*
      - run: coverage xml

      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
